#! /bin/sh

T="${label:="${LABEL:="$1"}"}"

if [ -z "$T" ] ; then
	echo '$label and $1 is not set' 1>&2
	exit 1
fi

e() {
	eval "$1='$2'"
	echo "$1=$2"
}

_msys() {
	PATH_BASE="/usr/local/bin:/bin:/c/Windows/system32:/c/Windows:/c/Windows/System32/Wbem:/e/software/_dev_/posix"
	PATH="$PATH_BASE"
}

B_SYSTEM_NAME="`uname -s`"
case "$T" in
	mingw-w32)
		e R_DEFAULT "$T"
		e R_MSYS mingw-w32-msys

		e CTARGET i686-w64-mingw32

		if [ "$OPT_TOOLCHAIN" ] ; then
			e PATH_OVERRIDE "/opt/i686-w64-mingw32/gcc-bin:/opt/i686-w64-mingw32/bin:`echo $PATH | sed -r 's#[^:]+i686-w64-mingw32[^:]+##g'`"
			e PATH "$PATH_OVERRIDE"
			e CRT_GLOB "/opt/$CTARGET/$CTARGET/lib/CRT_glob.o"
			e SYSROOT "/opt/$CTARGET/$CTARGET"
		else
			e CRT_GLOB "/usr/$CTARGET/lib/CRT_glob.o"
			e SYSROOT "/usr/$CTARGET"
		fi
	;;
	mingw-w64)
		e R_DEFAULT "$T"
		e R_MSYS mingw-w64-msys

		e CTARGET x86_64-w64-mingw32
		e CRT_GLOB "/usr/$CTARGET/$CTARGET/lib/CRT_glob.o"
		e SYSROOT "/usr/$CTARGET/$CTARGET"
	;;
	mingw-w32-msys)
		_msys
		e R_DEFAULT mingw-w32
		e R_MSYS "$T"

		e CTARGET i686-w64-mingw32
		tc_path=/c/Qt/Qt5*/Tools/MinGW
		e SYSROOT "$tc_path/$CTARGET"
		e PATH_OVERRIDE "$tc_path/bin:$PATH"
		e PATH_OVERRIDE "$PATH_OVERRIDE"
		e CRT_GLOB "$SYSROOT/lib/CRT_glob.o"
	;;
esac

exe=
case "$B_SYSTEM_NAME" in
	MINGW*)
		CBUILD="$CTARGET"
		exe=.exe
	;;
	CYGWIN*)
		CBUILD="$CTARGET"
		NO_CYGWIN=" -mno-cygwin"
	;;
	*)
		CBUILD="`gcc -dumpmachine`"
	;;
esac
