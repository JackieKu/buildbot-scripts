#! /bin/sh

. "$B_SCRIPTS_D/toolchain/map" "$@"

_cmake() {
	echo "CMAKE_EXECUTABLE=/usr/local/bin/cmake-$T"
}

_gmake() {
	echo "CMAKE_BUILDER_OPTIONS=-j8"
	[ "$G" != 'MinGW Makefiles' ] || echo "CMAKE_MAKE_PROGRAM=mingw32-make"
}

_get_target() {
	[ -z "$TARGET" ] || return 0
	case "$T" in
		*-x86|*-w32)
			TARGET=x86
		;;
		*-x64|*-w64)
			TARGET=x64
		;;
	esac
	[ -z "$TARGET" ] || echo "TARGET=$TARGET"
}

if [ -z "${Configuration:-$CONFIGURATION}" ] ; then
	e Configuration Release
fi
e CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE:-$Configuration}

G=
case "$T" in
	mingw*)
		_cmake
		_gmake
	;;
	qt4-linux)
		_gmake
	;;
	qt5-linux)
		T="${T%-linux}"
		_cmake
		_gmake
	;;
	qt*-mingw)
		G="MinGW Makefiles"
		_gmake
	;;
	qt*-msvc)
		G="Visual Studio 11"
	;;
	vs2012*)
		G="Visual Studio 11"
		_get_target
		case "$TARGET" in
			x86|'') : ;;
			x64)
				G="$G Win64"
			;;
			*)
				echo "Unknown target $TARGET" 1>&2
				exit 1
			;;
		esac
		# CMake does not use MSBuild, it uses devenv instead.
		#echo "CMAKE_BUILDER_OPTIONS=/m"
	;;
	borland)
		G="Borland Makefiles"
	;;
esac

[ -z "$G" ] || echo "CMAKE_GENERATOR=$G"
