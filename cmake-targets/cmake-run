#! /bin/sh

: ${CMAKE:=${CMAKE_EXECUTABLE:=cmake}}
: ${CMAKE_BUILD_TYPE:=Release}

case "`uname -s`" in
	MINGW*)
		_PATH="`echo "$PATH" | sed 's#:/bin:##g'`"
		PATH="$_PATH" cmd.exe /c "$B_CMAKE_RUN.cmd $*"
		exit
	;;
esac

__gen() {
	if [ "$CMAKE_GENERATOR" ] ; then
		$CMAKE -G "$CMAKE_GENERATOR" "$@"
	else
		$CMAKE "$@"
	fi
}

_gen() {
	__gen -DCMAKE_BUILD_TYPE="$CMAKE_BUILD_TYPE" $CMAKE_OPTS ..
}

_build() {
	# cmake --build cannot be used with other options except --config
	# so we need to call it directly. (not $CMAKE)
	cmake --build "$PWD" --config "$CMAKE_BUILD_TYPE" -- $CMAKE_BUILDER_OPTIONS
}

_test() {
	case "$label" in
		mingw*)
			exec "$B_CMAKE_RUN-tests-on-vbox" "$@"
			exit 1
		;;
	esac

	if ctest -C "$CMAKE_BUILD_TYPE" -j 2 ; then
		echo '0:OK' >TEST_RESULT
		rm -f TEST_FAILED
	else
		echo "$?:FAILED" >TEST_RESULT
		touch TEST_FAILED
	fi
	return 0
}

_pack() {
	cpack -C "$CMAKE_BUILD_TYPE"
}

set -e

[ -d build ] || mkdir build
cd build
for action ; do
	_$action
done
